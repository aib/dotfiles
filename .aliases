#Command overrides
ssh() {
	[[ -t 1 ]] && xtitle_push && trap 'trap - EXIT INT; xtitle_pop' EXIT INT && xtitle "SSH"
	command ssh "$@"
}

#allow sudo to expand aliases
alias sudo='sudo '

#default option aliases
alias ls='ls --color=auto -F'
alias ll='ls --block-size="'\''1" -l'
alias grep='grep --color=auto'
alias ip='ip --color=auto'
alias xxd='xxd -g 1'

#command aliases
alias cgrep='grep --color=always'
alias dfu='df -Th -x tmpfs -x devtmpfs -x squashfs'
alias sddd='sudo dd bs=4M oflag=direct,sync status=progress'
alias hl='history -iDd 0'
alias hlg='hl | grep'
alias nsa='netstat -pan46'
alias psl='ps -Heo pid,pgrp,user,%cpu,%mem,pri,cls,ni,nlwp,tty,stat,start_time,bsdtime,cmd'
alias pslg='psl | grep'
alias xclip='xclip -selection clipboard'
alias xsel='xsel --clipboard'

SSHU_OPTS='-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'
alias sshu="ssh $SSHU_OPTS"
alias scpu="scp $SSHU_OPTS"
alias sftpu="sftp $SSHU_OPTS"
alias sshfsu="sshfs $SSHU_OPTS"
alias rsyncu="rsync --rsh=\"ssh $SSHU_OPTS\""
alias sshu-copy-id="ssh-copy-id $SSHU_OPTS"
alias gitu='GIT_SSH_COMMAND="ssh $SSHU_OPTS" git'

alias diga='dig +noall +answer'

alias sqws='sed -e "s/\\s\\+/ /g"' #squeeze whitespace
alias sqwst='sed -e "s/\\s\\+/\\t/g"' #squeeze whitespace to tab
alias cuts='trim | sqws | cut --delimiter=" "'
alias cutt='trim | sqwst | cut'
alias trim='sed -e "s/^\\s*//" -e "s/\\s*$//"'

alias tsd='date "+%Y%m%d"'
alias tsdt='date "+%Y%m%d%H%M%S"'
alias tsms='ts "%Y-%m-%d %H:%M:%.S"'

alias clean-merge-files='find . \( -name "*.orig" -o -name "*_BACKUP_*" -o -name "*_BASE_*" -o -name "*_LOCAL_*" -o -name "*_REMOTE_*" \) -delete'

alias dotnice='dot -Gdpi=120 -Gpad=.25 -Gfontname=Sans -Nfontname=Sans -Efontname=Sans'

#Set terminal window title
xtitle() {
	echo -en "\e]0;$@\a"
}

#Push/pop terminal window title
xtitle_push() {
	echo -en "\e[22;0t"
}
xtitle_pop() {
	echo -en "\e[23;0t"
}

#mkdir + cd
mkcd() {
	mkdir -p -- "$1" &&
	cd -- "$1"
}

#Initialize a git repository
gitinit() {
	if [ -n "$1" ]; then mkdir -p -- "$1"; cd -- "$1"; fi
	git init .
	if git show-ref -q 2>/dev/null; [ $? -eq 1 ]; then
		git commit --allow-empty -m "Initial commit";
	fi
}

ipof() {
	getent hosts "$@" | cut -d' ' -f1
}

showcerts() {
	openssl s_client -showcerts -connect "$@" </dev/null
}

findext() {
	find . -iname "*.$1"
}
findfile() {
	find . -iname "*$1*"
}

# Create/activate virtualenv
venv() {
	local venv_dir="${1-./venv}"
	[ -e "$venv_dir" ] || (
		(python3 -m virtualenv --version && python3 -m virtualenv "$venv_dir") \
			|| python3 -m venv "$venv_dir"
	)
	. "$venv_dir"/bin/activate
}
